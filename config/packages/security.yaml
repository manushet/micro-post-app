security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_USER, ROLE_ALLOWED_TO_SWITCH]    
    password_hashers:
        App\Entity\User: 'auto'
    access_decision_manager:
        strategy: affirmative
        allow_if_all_abstain: true    
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users: 
            entity: 
                class: 'App\Entity\User'
                property: 'username'
                # optional: if you're using multiple Doctrine entity
                # managers, this option defines which one to use
                #manager_name: 'customer'
        # jwt:
        #     lexik_jwt: ~
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false        
        main:
            lazy: true
            provider: users   
            pattern: ^/
            user_checker: App\Security\UserChecker
            form_login:
                login_path: login
                check_path: login
                #default_target_path: posts
                #always_use_default_target_path: true
                #use_referer: true
                #failure_path: 
                #form_only: true
                #post_only: true
                #username_parameter: _username
                #password_parameter: _password
                #csrf_parameter: _csrf_token
            logout:
                # delete_cookies:
                #     cookie1-name: null
                #     cookie2-name:
                #         path: '/'
                #     cookie3-name:
                #         path: null
                #         domain: example.com
                path: logout 
                target: posts
                clear_site_data:
                    - cookies
                    - storage
            # access_token:
            #     token_handler: App\Security\AccessTokenHandler

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #- { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/logout, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
